<launch>

  <!-- defines name of the namespace of the drone -->
  <arg name="UAV_NAME" default="$(env UAV_NAME)" />
  <arg name="RUN_TYPE" default="$(env RUN_TYPE)" />

  <arg name="simulation" default="true" />

  <!-- will it run using GNU debugger? -->
  <arg name="DEBUG" default="false" />
  <arg unless="$(arg DEBUG)" name="launch_prefix_debug" value=""/>
  <arg     if="$(arg DEBUG)" name="launch_prefix_debug" value="debug_roslaunch"/>

  <!-- will it run as standalone nodelet or using a nodelet manager? -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="$(arg UAV_NAME)_waypointflier_manager" />
  <arg name="n_threads" default="8" />
  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <!-- Namespace -->
  <group ns="$(arg UAV_NAME)">

    <!-- WaypointFlier nodelet -->
    <node pkg="nodelet" type="nodelet" name="waypoint_flier" args="$(arg nodelet) waypoint_flier/WaypointFlier $(arg nodelet_manager)" launch-prefix="$(arg launch_prefix_debug)" output="screen">

      <!-- Parameters loaded from launch file -->
      <param name="simulation" value="$(eval arg('RUN_TYPE') == 'simulation')" />
      <param name="uav_name" value="$(arg UAV_NAME)" />

      <!-- ROS parameters config file -->
      <rosparam file="$(find waypoint_flier)/config/default.yaml" />
      <rosparam file="$(find waypoint_flier)/config/$(arg RUN_TYPE).yaml" />

      <!-- Subscribers -->
      <remap from="~odom_uav_in" to="odometry/odom_main" />
      <remap from="~control_manager_diagnostics_in" to="control_manager/diagnostics" />
      <remap from="~odom_gt_in" to="ground_truth" />

      <!-- Publishers -->
      <remap from="~reference_out" to="control_manager/reference" />
      <remap from="~dist_to_waypoint_out" to="~dist_to_waypoint" />

      <!-- Service servers -->
      <remap from="~start_waypoints_following_in" to="~start_waypoints_following" />
      <remap from="~stop_waypoints_following_in" to="~stop_waypoints_following" />
      <remap from="~fly_to_first_waypoint_in" to="~fly_to_first_waypoint" />

      <!-- Service clients -->
      <remap from="~land_out" to="uav_manager/land" />

    </node>

  </group>

</launch>
